import{_ as i,c as s,o as t,a6 as a,ac as e,ad as l,ae as n,af as r,ag as h,ah as o,ai as g}from"./chunks/framework.3YdPo1hh.js";const f=JSON.parse('{"title":"Git配置SSH","description":"","frontmatter":{"date":"2024-06-06T00:00:00.000Z","title":"Git配置SSH"},"headers":[],"relativePath":"Git配置SSH.md","filePath":"Git配置SSH.md","lastUpdated":1744724908000}'),p={name:"Git配置SSH.md"},d=a('<h1 id="git配置ssh" tabindex="-1">Git配置SSH <a class="header-anchor" href="#git配置ssh" aria-label="Permalink to &quot;Git配置SSH&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><ul><li>与Git服务器需要使用SSH认证，要使用SSH认证需要在电脑中通过git工具生成ssh<strong>公钥</strong>和<strong>私钥</strong>，并将公钥保存在Git服务器中。</li><li><strong>未配置SSH密钥的用户</strong>在推送代码到服务器时会要求输入用户名和密码。</li></ul><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><ul><li>以下将使用Github完成示例</li><li>首先在Github网站注册账号并登录。并记住注册的<strong>用户名</strong>和<strong>邮箱</strong></li><li>登陆后页面应默认跳转到控制台（Dashboard）页面，如果未跳转，则可手动进入：<a href="https://github.com/dashboard" target="_blank" rel="noreferrer">https://github.com/dashboard</a><ul><li><img src="'+e+'" alt="image.png"></li></ul></li><li>点击右上角头像，在弹出的侧边栏中选择设置（Settings）。进入页面： <a href="https://github.com/settings/profile" target="_blank" rel="noreferrer">https://github.com/settings/profile</a><ul><li><img src="'+l+'" alt="image.png"></li></ul></li><li>点击左侧SSH与GPG密钥（SSH and GPG keys），进入页面： <a href="https://github.com/settings/keys" target="_blank" rel="noreferrer">https://github.com/settings/keys</a></li><li>在页面右上点击按钮<code>New SSH key</code>，进入页面： <a href="https://github.com/settings/ssh/new" target="_blank" rel="noreferrer">https://github.com/settings/ssh/new</a><ul><li><img src="'+n+'" alt="image.png"></li><li><img src="'+r+`" alt="image.png"></li></ul></li><li>接下来打开命令提示符</li><li>在命令提示符中输入命令<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;替换成用户名&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;替换成邮箱&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;替换成邮箱&quot;</span></span></code></pre></div></li><li>执行<code>ssh-keygen</code>命令时可以全部使用默认配置，一直回车 <ul><li><img src="`+h+'" alt="image.png"></li></ul></li><li>执行成功之后，SSH密钥将被保存在当前用户的<code>.ssh</code>文件夹下 <ul><li>Windows系统可找到文件 <code>C:\\Users\\用户名\\.ssh\\id_rsa.pub</code>复制其中的SSH公钥</li><li>Linux系统可运行命令<code> cat ~/.ssh/id_rsa.pub</code>打印SSH公钥</li></ul></li><li>将公钥粘贴到Github的<code>Add new SSH Key</code>页面的<code>Key</code>中，填写一个标题（Title）。点击添加SSH密钥按钮，即可添加成功。</li><li>添加成功后可在<code>SSH and GPG keys</code>页面中查看到已经添加过的公钥。</li></ul><h2 id="gitee页面" tabindex="-1">Gitee页面 <a class="header-anchor" href="#gitee页面" aria-label="Permalink to &quot;Gitee页面&quot;">​</a></h2><ul><li>首页及账号设置位置 <ul><li><img src="'+o+'" alt="image.png"></li></ul></li><li>SSH公钥页面 <ul><li><img src="'+g+'" alt="image.png"></li></ul></li></ul>',7),c=[d];function k(u,_,S,m,F,b){return t(),s("div",null,c)}const C=i(p,[["render",k]]);export{f as __pageData,C as default};

import{_ as a,c as e,o as t,a6 as l}from"./chunks/framework.3YdPo1hh.js";const p=JSON.parse('{"title":"分布式版本控制系统","description":"","frontmatter":{"date":"2024-06-06T00:00:00.000Z","title":"分布式版本控制系统"},"headers":[],"relativePath":"分布式版本控制系统.md","filePath":"分布式版本控制系统.md","lastUpdated":1744724908000}'),i={name:"分布式版本控制系统.md"},_=l('<h1 id="分布式版本控制系统" tabindex="-1">分布式版本控制系统 <a class="header-anchor" href="#分布式版本控制系统" aria-label="Permalink to &quot;分布式版本控制系统&quot;">​</a></h1><h2 id="集中式版本控制系统" tabindex="-1">集中式版本控制系统 <a class="header-anchor" href="#集中式版本控制系统" aria-label="Permalink to &quot;集中式版本控制系统&quot;">​</a></h2><ul><li>版本库集中存放在中央服务器。最大的毛病就是必须联网才能工作。</li></ul><h2 id="分布式版本控制系统-1" tabindex="-1">分布式版本控制系统 <a class="header-anchor" href="#分布式版本控制系统-1" aria-label="Permalink to &quot;分布式版本控制系统&quot;">​</a></h2><ul><li>没有“中央服务器”，每个人的电脑上都是一个完整的版本库。</li><li>你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</li><li>安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。</li><li>而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。</li></ul>',5),o=[_];function r(s,n,c,d,h,u){return t(),e("div",null,o)}const f=a(i,[["render",r]]);export{p as __pageData,f as default};

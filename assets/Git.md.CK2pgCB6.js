import{_ as i,c as t,o as a,a6 as l}from"./chunks/framework.3YdPo1hh.js";const m=JSON.parse('{"title":"Git","description":"","frontmatter":{"date":"2024-06-06T00:00:00.000Z","title":"Git"},"headers":[],"relativePath":"Git.md","filePath":"Git.md","lastUpdated":1744724908000}'),e={name:"Git.md"},r=l('<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><ul><li>Git是当前最先进的<a href="/分布式版本控制系统.html"><strong>分布式版本控制系统</strong></a>。可以有效的、方便的管理项目代码。</li><li>Git是一个工具，可以连接到任意的代码仓库，例如Github、Gitee等。</li></ul><h2 id="一些概念" tabindex="-1">一些概念 <a class="header-anchor" href="#一些概念" aria-label="Permalink to &quot;一些概念&quot;">​</a></h2><ul><li>仓库（repository）</li><li>一个仓库就是一个项目。</li><li>分支（branch）</li><li>一个仓库中可以有多个代码分支。这些分支可以保存不同版本的代码。可用于以下用途： <ul><li>用于实验性功能的开发。不确定功能是否可行，可以分离出一个新的分支尝试，如果方案不可行，可直接删除分支，不影响主分支。</li><li>多人协作开发不同功能。如果只在一个分支上进行协作开发，可能会导致意料外的代码冲突。使用分支可分离不同人的代码，最后只在合并时检查冲突。</li><li>版本周期。对于有迭代周期的任务，可以用分支控制不同周期的任务。方便定位开发的功能。</li><li>其他。只要你想，你可以在任何场合下使用分支功能。</li></ul></li><li>主分支（master）</li><li>每一个仓库都有一个默认的主分支。</li></ul><h2 id="笔记" tabindex="-1">笔记 <a class="header-anchor" href="#笔记" aria-label="Permalink to &quot;笔记&quot;">​</a></h2><ul><li><a href="/Git安装.html">Git安装</a></li><li><a href="/Git配置SSH.html">Git配置SSH</a></li><li><a href="/将新的仓库推送到Github.html">将新的仓库推送到Github</a></li><li><a href="/Git常见命令.html">Git常见命令</a></li><li><a href="/常用Git工具.html">常用Git工具</a></li></ul>',7),h=[r];function o(s,n,c,d,_,u){return a(),t("div",null,h)}const f=i(e,[["render",o]]);export{m as __pageData,f as default};

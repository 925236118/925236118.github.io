import{_ as s,c as i,o as a,a6 as n,ao as h,ap as t,aq as l}from"./chunks/framework.3YdPo1hh.js";const _=JSON.parse('{"title":"Godot着色器案例-放大镜着色器","description":"","frontmatter":{"date":"2024-07-05T00:00:00.000Z","title":"Godot着色器案例-放大镜着色器"},"headers":[],"relativePath":"Godot着色器案例-放大镜着色器.md","filePath":"Godot着色器案例-放大镜着色器.md","lastUpdated":1744724908000}'),k={name:"Godot着色器案例-放大镜着色器.md"},e=n('<h1 id="godot着色器案例-放大镜着色器" tabindex="-1">Godot着色器案例-放大镜着色器 <a class="header-anchor" href="#godot着色器案例-放大镜着色器" aria-label="Permalink to &quot;Godot着色器案例-放大镜着色器&quot;">​</a></h1><h2 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-label="Permalink to &quot;标签&quot;">​</a></h2><ul><li>#片段着色器 #顶点着色器</li></ul><h2 id="素材" tabindex="-1">素材 <a class="header-anchor" href="#素材" aria-label="Permalink to &quot;素材&quot;">​</a></h2><details class="details custom-block"><summary>放大镜素材</summary><ul><li><img src="'+h+'" alt="image.png"></li><li><img src="'+t+`" alt="image.png"></li></ul></details><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><ul><li>使用片段着色器获得镜片中心位置的UV，根据计算后的UV除以放大倍数，并获取到对应位置的屏幕的纹理，赋值给放大镜镜片。</li><li>计算镜片中心位置的UV时，需要先将要获取的点(0.5,0.5)设置成齐次坐标(添加到第4维)，然后依次左乘三个矩阵，将坐标从<em>局部空间</em>转换到<em>世界空间</em>转换到<em>画布空间</em>转换到<em>屏幕空间</em>，然后就可以作为屏幕uv进行计算。</li><li>因为godot中获取纹理顺序为自上向下，所以可以将放大镜框作为镜片的子节点，这样就不会获取到镜框的纹理。</li></ul><h2 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h2><div class="language-gdshader vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gdshader</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">shader_type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> canvas_item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> scale_factor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sampler2D</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> screen_tex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> hint_screen_texture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter_nearest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vec2</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> center_uv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vertex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	center_uv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SCREEN_MATRIX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CANVAS_MATRIX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MODEL_MATRIX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).xy;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">	center_uv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">center_uv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fragment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	vec2</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> uv_difference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SCREEN_UV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> center_uv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	vec2</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> modified_uv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  uv_difference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> center_uv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	vec4</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> sampled_color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">screen_tex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">modified_uv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	COLOR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rgb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> sampled_color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.rgb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><ul><li><img src="`+l+'" alt="image.png"></li></ul>',11),p=[e];function r(d,E,g,F,y,o){return a(),i("div",null,p)}const C=s(k,[["render",r]]);export{_ as __pageData,C as default};

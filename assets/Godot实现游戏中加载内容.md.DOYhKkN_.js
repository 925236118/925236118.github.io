import{_ as s,c as i,o as a,a6 as t}from"./chunks/framework.3YdPo1hh.js";const y=JSON.parse('{"title":"Godot实现游戏中加载内容","description":"","frontmatter":{"date":"2025-05-19T00:00:00.000Z","title":"Godot实现游戏中加载内容"},"headers":[],"relativePath":"Godot实现游戏中加载内容.md","filePath":"Godot实现游戏中加载内容.md","lastUpdated":1747651582000}'),n={name:"Godot实现游戏中加载内容.md"},l=t(`<h1 id="godot实现游戏中加载内容" tabindex="-1">Godot实现游戏中加载内容 <a class="header-anchor" href="#godot实现游戏中加载内容" aria-label="Permalink to &quot;Godot实现游戏中加载内容&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>开发游戏中，经常需要在游戏发布后添加若干内容。类似的功能有：</p><ul><li><strong>游戏增量更新</strong>，不需要重新下载游戏，只需要下载更新pck文件并放在对应的文件目录下，就可以实现游戏更新。</li><li><strong>DLC</strong>，DLC又称为游戏的后续可下载内容，通常为发售后付费追加的内容。</li><li><strong>MOD</strong>，Mod又称为游戏模组，可以由第三方开发，并添加到游戏中，用于修改游戏中的内容。使游戏更有趣。</li></ul><p>以上这些情况，通常为游戏已经分发，但又由于某些原因希望在已发布的版本上增添一些内容。这时就可以阅读本篇博客为游戏添加加载资源包的功能。</p><h2 id="在游戏中添加加载器" tabindex="-1">在游戏中添加加载器 <a class="header-anchor" href="#在游戏中添加加载器" aria-label="Permalink to &quot;在游戏中添加加载器&quot;">​</a></h2><p>我使用的逻辑是:</p><ul><li>游戏一开始会加载一个加载中页面</li><li>在加载页面中，会检测某一个目录是否存在（可以为 /dlcs、/mods、/updates）</li><li>如果目录存在，则会循环判断目录中的每一个文件是否是以<code>pck</code>后缀结尾。</li><li>如果是则将该资源包加载到游戏中。否则跳过继续检查。</li><li>等待所有文件都检测后，进入游戏。</li></ul><details class="details custom-block"><summary>代码</summary><div class="language-gdscript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gdscript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Control</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@export_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;*.tscn&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start_scene</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> _ready</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	load_dlc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> load_dlc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlc_dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DirAccess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./dlc&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlc_dir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dlc_dir.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_current_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		dlc_dir.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list_dir_begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlc_dir.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlc_dir.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">current_is_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">				print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Found directory: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">				print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Found file: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">				if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ends_with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pck&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">					var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ProjectSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_resource_pack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./dlc/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file_name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">					if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> success:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">						print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;加载DLC {0} 成功&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [file_name])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">					else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">						printerr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;加载DLC {0} 失败&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [file_name])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			file_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlc_dir.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_next</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;没有dlc目录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 重新加载页面</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> get_tree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create_timer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).timeout</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	get_tree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">change_scene_to_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(start_scene)</span></span></code></pre></div></details><h2 id="示例项目" tabindex="-1">示例项目 <a class="header-anchor" href="#示例项目" aria-label="Permalink to &quot;示例项目&quot;">​</a></h2><p><a href="https://file.moshangzhu.com.cn/dlc_test_game.zip" target="_blank" rel="noreferrer">示例导出后的项目</a></p><p>修改dlc文件夹名称，运行start_game查看结果。</p><p>如果成功加载DLC中的pck文件，则会在游戏场景中看到一个可以跳转场景的按钮。</p><h2 id="qa" tabindex="-1">QA <a class="header-anchor" href="#qa" aria-label="Permalink to &quot;QA&quot;">​</a></h2><ul><li><p>Q: 为什么要添加一个加载中页面？<br> A: 因为pck中的文件可能会修改开始游戏的场景，如果pck资源包中有替换开始页面的内容，则不会自动更新，需要调用代码<code>get_tree().relaod_current_scene()</code>，但这时可能会出现报错，报错内容为<code>ERROR: Parent node is busy adding/removing children, &#39;remove_child()&#39; can&#39;t be called at this time.</code>。所以我使用的是添加一个加载中场景并在加载完成后再切换到开始页面。</p></li><li><p>Q: 如何实现Mod的加载列表？<br> A: 通常游戏会在开始界面中添加一个页面，用来管理开启或关闭某些mod，此时可以在加载的时候生成一个配置文件，游戏首先读取配置文件获取到mod列表，然后再按照顺序去mods文件夹中加载开启的mod。</p></li></ul>`,15),h=[l];function k(p,e,r,d,E,g){return a(),i("div",null,h)}const c=s(n,[["render",k]]);export{y as __pageData,c as default};

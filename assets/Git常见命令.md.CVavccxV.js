import{_ as s,c as i,o as a,a6 as l}from"./chunks/framework.3YdPo1hh.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Git常见命令.md","filePath":"Git常见命令.md","lastUpdated":1717659277000}'),t={name:"Git常见命令.md"},e=l(`<h2 id="初始化仓库-init" tabindex="-1">初始化仓库（init） <a class="header-anchor" href="#初始化仓库-init" aria-label="Permalink to &quot;初始化仓库（init）&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h2 id="克隆-clone" tabindex="-1">克隆（clone） <a class="header-anchor" href="#克隆-clone" aria-label="Permalink to &quot;克隆（clone）&quot;">​</a></h2><ul><li>用于将远程的项目克隆到本地。</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># git 克隆项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 仓库链接</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [本地项目名称]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/username/test_rep.git</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # http链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:username/test_rep.git</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ssh链接</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:username/test_rep.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 将代码克隆到my_project目录中</span></span></code></pre></div><h2 id="暂存修改-add" tabindex="-1">暂存修改（add） <a class="header-anchor" href="#暂存修改-add" aria-label="Permalink to &quot;暂存修改（add）&quot;">​</a></h2><ul><li>用于将本地的修改暂存</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 暂存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [文件名2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> other_file.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 暂存所有修改</span></span></code></pre></div><h2 id="撤销或恢复修改-restore" tabindex="-1">撤销或恢复修改（restore） <a class="header-anchor" href="#撤销或恢复修改-restore" aria-label="Permalink to &quot;撤销或恢复修改（restore）&quot;">​</a></h2><ul><li>用于将文件恢复到<strong>最新提交</strong>的状态（丢弃所有更改），或仅撤销暂存，仍保留未提交的更改。</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将指定文件恢复到最新的提交状态，丢弃所有未提交的更改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restore</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果你已经使用 git add 将文件添加到暂存区，但希望撤销这些更改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restore</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --staged</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名</span></span></code></pre></div><h2 id="查看状态-status" tabindex="-1">查看状态（status） <a class="header-anchor" href="#查看状态-status" aria-label="Permalink to &quot;查看状态（status）&quot;">​</a></h2><ul><li>查看仓库当前的状态，显示有变更的文件。</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行后打印的日志中：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Changes not staged for commit 中的时未暂存的文件，可使用add和restore操作</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Changes to be committed 中的时已暂存未提交的文件，可使用restore --staged操作</span></span></code></pre></div><h2 id="提交-commit" tabindex="-1">提交（commit） <a class="header-anchor" href="#提交-commit" aria-label="Permalink to &quot;提交（commit）&quot;">​</a></h2><ul><li>当完成了一个功能或者修改后，应使用提交功能将代码保存下来。</li><li>提交后会更新当前分支的头节点到最新的位置。</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;本次提交说明&quot;</span></span></code></pre></div><ul><li><blockquote><p>注意：除非你知道你在做什么，否则一定要加上<code>-m</code>参数以及后面的提交说明。</p></blockquote></li><li>提交说明应最好有意义。可以查看此处的<a href="/Git提交说明规范.html">Git提交说明规范</a>。</li></ul><h2 id="日志-log" tabindex="-1">日志（log） <a class="header-anchor" href="#日志-log" aria-label="Permalink to &quot;日志（log）&quot;">​</a></h2><p>id:: 6656d7f0-0fc2-40df-a0f4-6f0bf8499a5c</p><ul><li>打印当前分支的所有提交日志</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span></code></pre></div><ul><li><blockquote><p>运行命令后会进入vim，此时需要使用<code>j</code>键向下翻动，<code>k</code>键向上翻动。<code>q</code>键退出查看模式。</p></blockquote></li><li>每一条提交日志都应是以下格式：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>commit commitID</span></span>
<span class="line"><span>Author: 作者username &lt;作者email&gt;</span></span>
<span class="line"><span>Date:   commit时间</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	commit说明</span></span></code></pre></div><ul><li><code>commitID</code>是一串十六进制数，在代码版本回退等操作中需要使用到这个id id:: 6656d98e-ada2-4acc-8136-6e4fcad14f07</li></ul><h2 id="回滚版本-reset" tabindex="-1">回滚版本（reset） <a class="header-anchor" href="#回滚版本-reset" aria-label="Permalink to &quot;回滚版本（reset）&quot;">​</a></h2><ul><li>该命令用于回退版本</li><li>说明参照 <a href="https://www.runoob.com/git/git-reset.html" target="_blank" rel="noreferrer">https://www.runoob.com/git/git-reset.html</a></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--soft </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> --mixed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> --hard]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [HEAD]</span></span></code></pre></div><ul><li>回退类型</li><li><strong>--mixed</strong> 为默认，可以不用带该参数，用于重置暂存区的文件与上一次的提交(commit)保持一致，工作区文件内容保持不变。</li><li><strong>--soft</strong> 参数用于回退到某个版本：</li><li><strong>--hard</strong> 参数撤销工作区中所有未提交的修改内容，将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交：</li><li>HEAD</li><li>应为要回退到的版本的commitID，详见 ((6656d7f0-0fc2-40df-a0f4-6f0bf8499a5c))</li></ul><h2 id="推送-push" tabindex="-1">推送（push） <a class="header-anchor" href="#推送-push" aria-label="Permalink to &quot;推送（push）&quot;">​</a></h2><ul><li>用于将未推送的提交推送到远程仓库</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><h2 id="拉取-pull" tabindex="-1">拉取（pull） <a class="header-anchor" href="#拉取-pull" aria-label="Permalink to &quot;拉取（pull）&quot;">​</a></h2><ul><li>用于将远程仓库未同步的提交同步到本地</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span></code></pre></div><h2 id="分支操作-checkout" tabindex="-1">分支操作（checkout） <a class="header-anchor" href="#分支操作-checkout" aria-label="Permalink to &quot;分支操作（checkout）&quot;">​</a></h2><ul><li>用于切换、新建分支</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 新建并切换到分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_branch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以当前分支的某次提交创建新分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_test_branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitID</span></span></code></pre></div>`,38),n=[e];function h(p,k,d,r,o,c){return a(),i("div",null,n)}const u=s(t,[["render",h]]);export{F as __pageData,u as default};
